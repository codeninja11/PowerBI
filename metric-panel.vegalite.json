{
  "$schema": "https://vega.github.io/schema/vega-lite/v5.json",
  "description": "Two-row metric panel: Row1 Current (large), Row2 Change (%.2 | \u00b1K/M/B), with bold row labels on the left.",
  "hconcat": [
    {
      "data": {
        "values": [
          {
            "Row": "Current"
          },
          {
            "Row": "Change"
          }
        ]
      },
      "width": 90,
      "height": 80,
      "mark": {
        "type": "text",
        "align": "left",
        "baseline": "middle",
        "fontWeight": "bold",
        "color": "black"
      },
      "encoding": {
        "y": {
          "field": "Row",
          "type": "ordinal",
          "sort": [
            "Current",
            "Change"
          ],
          "axis": null
        },
        "x": {
          "value": 0
        },
        "text": {
          "field": "Row"
        },
        "size": {
          "condition": [
            {
              "test": "datum.Row === 'Current'",
              "value": 22
            },
            {
              "test": "datum.Row === 'Change'",
              "value": 14
            }
          ],
          "value": 14
        }
      }
    },
    {
      "data": {
        "name": "dataset"
      },
      "width": {
        "step": 140
      },
      "height": 80,
      "transform": [
        {
          "calculate": "toNumber(datum['Metric Current'])",
          "as": "Current"
        },
        {
          "calculate": "toNumber(datum['Metric Previous'])",
          "as": "Previous"
        },
        {
          "calculate": "datum.Previous != null && datum.Previous != 0 ? (datum.Current - datum.Previous) / datum.Previous : null",
          "as": "PctChange"
        },
        {
          "calculate": "datum.Current - datum.Previous",
          "as": "AbsChange"
        },
        {
          "calculate": "indexof(['Shop GMV','T.GMV','T.Spend'], datum.Metric) >= 0",
          "as": "IsMoney"
        },
        {
          "calculate": "indexof(['Shop CR%','Paid GMV Cont','CIR'], datum.Metric) >= 0",
          "as": "IsPercentMetric"
        },
        {
          "calculate": "indexof(['ROAS','Shop ROI'], datum.Metric) >= 0",
          "as": "IsRatioMetric"
        },
        {
          "calculate": "datum.IsPercentMetric ? format(datum.Current, '.2%') : (datum.IsRatioMetric ? format(datum.Current, '.2f') : replace(replace(format(datum.Current, '.2s'),'k','K'),'G','B'))",
          "as": "CurrentCore"
        },
        {
          "calculate": "datum.IsMoney ? '\u0e3f' + datum.CurrentCore : datum.CurrentCore",
          "as": "CurrentText"
        },
        {
          "calculate": "isValid(datum.PctChange) ? format(datum.PctChange, '+.2%') : '\u2014'",
          "as": "PctText"
        },
        {
          "calculate": "datum.AbsChange >= 0 ? '+' : '-'",
          "as": "Sign"
        },
        {
          "calculate": "replace(replace(format(abs(datum.AbsChange), '.2s'),'k','K'),'G','B')",
          "as": "MoneyCore"
        },
        {
          "calculate": "datum.Sign + '\u0e3f' + datum.MoneyCore",
          "as": "MoneyText"
        },
        {
          "calculate": "datum.IsPercentMetric ? format(datum.AbsChange, '+.2%') : (datum.IsRatioMetric ? format(datum.AbsChange, '+.2f') : datum.MoneyText)",
          "as": "AbsText"
        },
        {
          "calculate": "datum.PctText + ' | ' + datum.AbsText",
          "as": "ChangeText"
        },
        {
          "calculate": "isValid(datum.PctChange) && datum.PctChange < 0 ? '#e44' : '#008000'",
          "as": "ChangeColor"
        }
      ],
      "layer": [
        {
          "mark": {
            "type": "text",
            "align": "center",
            "baseline": "middle",
            "fontWeight": "bold",
            "fontSize": 22
          },
          "transform": [
            {
              "calculate": "'Current'",
              "as": "Row"
            }
          ],
          "encoding": {
            "x": {
              "field": "Metric",
              "type": "ordinal",
              "sort": {
                "field": "Order",
                "order": "ascending"
              },
              "axis": {
                "orient": "top",
                "title": null,
                "labelAngle": 0,
                "labelFontWeight": "bold",
                "labelLimit": 140
              }
            },
            "y": {
              "field": "Row",
              "type": "ordinal",
              "sort": [
                "Current",
                "Change"
              ],
              "axis": null
            },
            "text": {
              "field": "CurrentText"
            },
            "color": {
              "value": "black"
            }
          }
        },
        {
          "mark": {
            "type": "text",
            "align": "center",
            "baseline": "middle",
            "fontSize": 14
          },
          "transform": [
            {
              "calculate": "'Change'",
              "as": "Row"
            }
          ],
          "encoding": {
            "x": {
              "field": "Metric",
              "type": "ordinal",
              "sort": {
                "field": "Order",
                "order": "ascending"
              }
            },
            "y": {
              "field": "Row",
              "type": "ordinal",
              "sort": [
                "Current",
                "Change"
              ],
              "axis": null
            },
            "text": {
              "field": "ChangeText"
            },
            "color": {
              "field": "ChangeColor",
              "scale": null
            }
          }
        }
      ]
    }
  ],
  "resolve": {
    "scale": {
      "y": "shared"
    }
  },
  "config": {
    "view": {
      "stroke": "transparent"
    },
    "axis": {
      "domain": false,
      "ticks": false,
      "grid": false
    }
  }
}